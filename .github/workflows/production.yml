name: Build and Deploy to Vercel (Production Branch) 🚀

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

on:
  push:
    branches: ["main"]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
      - name: Checkout Repository 🛎️
        uses: actions/checkout@v4
  
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      # - name: Get pnpm store directory
      #   shell: bash
      #   run: |
      #     echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      # - name: Setup pnpm cache
      #   uses: actions/cache@v4
      #   with:
      #     path: ${{ env.STORE_PATH }}
      #     key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pnpm-store

      # - name: Install Dependencies
      #   run: pnpm install

      - name: Install Vercel CLI 🛠️
        run: pnpm install --global vercel@latest

      - name: Pull Vercel Environment Information 📥
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts 🏗️
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel 🚀
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
